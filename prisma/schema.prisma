generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id        Int       @id
  profiles  Profile[]
  gayId     Int?
  updatedAt DateTime  @updatedAt
}

model Profile {
  userId                Int
  chatId                Int
  chat                  Chat              @relation(fields: [chatId], references: [id])
  rolesOnProfile        RolesOnProfiles[]
  updatedAt             DateTime          @updatedAt
  createdAt             DateTime          @default(now())
  gayCounter            Int               @default(0)
  xp                    Int               @default(0)
  xpUpdatedAt           DateTime          @default(now())
  boosterId             Int?
  booster               Booster?          @relation(fields: [boosterId], references: [id])
  boosterExpirationDate DateTime?

  @@id([userId, chatId])
}

model Role {
  id             Int               @id @default(autoincrement())
  name           String            @unique
  description    String
  profilesOnRole RolesOnProfiles[]
}

model RolesOnProfiles {
  userId  Int
  chatId  Int
  roleId  Int
  profile Profile @relation(fields: [userId, chatId], references: [userId, chatId], onDelete: Cascade, onUpdate: Cascade)
  role    Role    @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([userId, chatId, roleId])
}

model Booster {
  id          Int             @id @default(autoincrement())
  value       Float           @default(1)
  title       String          @unique
  description String
  photo       String?
  duration    Int             @default(3600000)
  rarityId    Int             @default(1)
  rarity      Rarity          @relation(fields: [rarityId], references: [id])
  categoryId  Int
  category    BoosterCategory @relation(fields: [categoryId], references: [id])
  profiles    Profile[]
}

model BoosterCategory {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  description String
  boosters    Booster[]
}

model Rarity {
  id          Int       @id @default(autoincrement())
  title       String
  probability Float
  boosters    Booster[]
}

model AttachmentType {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  attachments Attachment[]
}

model Attachment {
  id        Int            @id @default(autoincrement())
  ownerId   Int
  mediaId   Int
  accessKey String?
  typeId    Int
  type      AttachmentType @relation(fields: [typeId], references: [id])
}
